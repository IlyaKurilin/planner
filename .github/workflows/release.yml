name: Release Windows

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Clear code signing env vars
        shell: pwsh
        run: |
          $env:WIN_CSC_LINK=$null
          $env:CSC_LINK=$null
          $env:CSC_IDENTITY_AUTO_DISCOVERY='false'
          [Environment]::SetEnvironmentVariable('WIN_CSC_LINK',$null,'Process')
          [Environment]::SetEnvironmentVariable('CSC_LINK',$null,'Process')
          [Environment]::SetEnvironmentVariable('CSC_IDENTITY_AUTO_DISCOVERY','false','Process')

      - name: Clean winCodeSign cache
        shell: pwsh
        run: |
          $cache = Join-Path $env:LOCALAPPDATA 'electron-builder\Cache\winCodeSign'
          if (Test-Path $cache) { Remove-Item -LiteralPath $cache -Recurse -Force -ErrorAction SilentlyContinue }

      - name: Build Windows installer (NSIS)
        run: npm run dist
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: 'false'

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist/**
        if: always()

      - name: Create GitHub Release and attach installers
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          name: "Planner ${{ github.ref_name }}"
          files: |
            dist/*.exe
            dist/*.yml
            dist/*.blockmap
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


